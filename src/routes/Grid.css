.boxes {
    display:flex;
    justify-content:center;
    align-items: center;
    color:#f7f1e3;
}
.box1{ background-color: #f8a5c2; }
.box2{ background-color: #63cdda; }
.box3{ background-color: #f7d794; }
section {
    height:100vh;
    margin-bottom:1rem;
    padding:1.2rem;
    padding-top:8rem;
}

/* grid1 - v1 ~ v5 */
.grid1 { display: grid;margin-bottom:2rem; }
.grid1.v1 { grid-template-columns: repeat(3, 200px); } /* 200px 3times, grid-template-columns: 200px 200px 200px;*/
.grid1.v2 { grid-template-columns: 100px 100px 50%; }
.grid1.v3 { grid-template-columns: 100px 100px 1fr; } /* 오른쪽 비어있는 부분을 채워준다.*/
.grid1.v4 { grid-template-columns: 1fr 1fr 1fr; } /* 동일한 비율로 채워준다.*/
.grid1.v5 { grid-template-columns: 1fr 2fr 1fr; } /* 두번째는 2배에 해당하는 나머지는 동일한 비율로 채워준다.*/
.grid1 .box1,
.grid1 .box2,
.grid1 .box3 { padding:1.5rem 0;}
/* grid2 - v1 ~ v7 */
.grid2 { display: grid; }
.grid2.v1 {
    grid-template-columns:1fr 1fr;
    grid-template-rows: 300px 300px;
}
.grid2.v2 {
    height:100vh;
    grid-template-columns:1fr 1fr;
    grid-template-rows: 1fr 1fr; 
    /* 정확한 높이값이 없으면 내용에 따라 높이가 정해진다. 내용물에 따라서가아니라 화면을 채우면서
    해당 배율로 공간을 쓰고싶으면 height:100vh;를 추가해서 뷰포트 전체를 높이로 사용하면 된다.*/    
}
.grid2.v3 {
    height:100vh;
    grid-template-columns:1fr 1fr;
    grid-template-rows: 1fr 1fr;   
}
.grid2.v3 .box3{
    grid-column-start: 1;
    grid-column-end:3;
    /* 왼->오 방향으로 |1~2|2~3| 까지 채운다는 의미
    , grid-column:1/3 같은 의미 */
}
.grid2.v4 {
    height:100vh;
    grid-template-columns:1fr 1fr;
    grid-template-rows: 1fr 1fr;    
}
.grid2.v4 .box1{ 
    grid-column:1/2;
    grid-row:1/2;
}
.grid2.v4 .box2{ grid-row:1/3; }
.grid2.v4 .box3{ grid-column:1/2; }

.grid2.v5 {
    height:100vh;
    grid-template-columns:1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;    
}
.grid2.v5 .box1{ 
    grid-column:1/2;
    grid-row:1/3;
}
.grid2.v5 .box2{ 
    grid-row:2/4; 
}
.grid2.v5 .box3{ 
    grid-column:2/4; 
}
.grid2.v6 {
    height:100vh;
    grid-template-columns:1fr 1fr;
    grid-template-rows: 1fr 1fr;
    grid-template-areas:
    "box1 box2"
    "box3 box3";    
    /*
    "box1 box2"
    "box3 .     도 가능
    */
}
.grid2.v6 .box1{ grid-area:box1; }
.grid2.v6 .box2{ grid-area:box2; }
.grid2.v6 .box3{ grid-area:box3; }
.grid2.v7 {
    height:100vh;
    grid-template-columns:1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr;
    grid-template-areas:
    "box1 box1"
    "box2 ."
    ". box3";
}
.grid2.v7 .box1{ grid-area:box1; }
.grid2.v7 .box2{ grid-area:box2; }
.grid2.v7 .box3{ grid-area:box3; }

/* grid3 - v1 ~ v8 */
.grid3 { 
    display: grid; 
    height:100vh;
    grid-template-columns:1fr 1fr;
    grid-template-rows:1fr 1fr;
    grid-template-areas: 
    "box1 box2"
    "box3 box3";
}
.grid3 .box1 { grid-area:box1; }
.grid3 .box2 { grid-area:box2; }
.grid3 .box3 { grid-area:box3; }
.grid3.v1 { justify-items: center; }
.grid3.v2 { justify-items: end; }
.grid3.v3 { justify-items: start; }
.grid3.v4 { justify-items: stretch; }
.grid3.v5 { 
    justify-items: center; 
    align-items: center;
}
.grid3.v6 .box1 { align-self: center;}
.grid3.v7 .box1 { align-self: end;}
.grid3.v8 .box1 { justify-self: center;}

/* grid4 */
.grid4 { 
    display: grid; 
    height:100vh;
    grid-template-columns:1fr 1fr;
    grid-template-rows:1fr 1fr;
    grid-template-areas: 
    "box1 box2"
    "box3 box3";
}
.grid4 .box1 { 
    grid-area:box1; 
    display: flex;
    justify-content: space-around;
    align-items: center;
}

/* grid5 - v1 ~ v4 */
.grid5 { display: grid; }
.grid5 img {
    width:100%;
}
.grid5.v1 { grid-template-columns: repeat(3, 200px); }
.grid5.v2 { grid-template-columns: repeat(auto-fill, 200px); }
.grid5.v3 { grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); }
/* v2는 오른쪽에 공백이 생길 수도 있어서 v3을 쓰면 뷰포트 변화에 따른 일시적 공백이 없어진다. */
.grid5.v4 { 
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); 
    grid-column-gap: 20px;
    grid-row-gap: 20px;
}

